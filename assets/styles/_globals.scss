@use "helpers" as *;

html {
    &.is-lock {
        overflow: hidden;
    }
}

body {
    display: flex;
    flex-direction: column;
    background-color: var(--color-white-alt);

    font-family: var(--font-primary);
    font-size: var(--font-size-md);
    color: var(--color-black-alt);
}

main {
    flex-grow: 1;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
    font-weight: 500;
    color: var(--color-black-alt);
    line-height: 1;

    &:where([class]) {
        margin: 0;
    }
}

.h1 {
    font-size: var(--font-size-xxl);
}

.h2 {
    font-size: var(--font-size-xl);
    letter-spacing: calc(42px * -0.06);
}

.h3 {
    font-size: var(--font-size-l);
    letter-spacing: calc(24px * -0.07);
}

.h4 {
    font-size: var(--font-size-md);
    letter-spacing: calc(14px * -0.04);
    line-height: 1.35;
}

.h5 {
    font-size: var(--font-size-s);
    letter-spacing: calc(12px * -0.03);
    line-height: 1.35;
}

.h6 {
    font-size: var(--font-size-xs);
    letter-spacing: calc(10px * -0.03);
    line-height: 1.35;
}

a,
button,
label,
input,
textarea,
select,
svg * {
    transition-duration: var(--transition-duration);
}

a {
    color: inherit;

    &[class] {
        text-decoration: none;
    }

    @include hover {
        text-decoration: underline;
    }
}

:focus-visible {
    @include focus-visible;
}

*.loading {
    position: relative;
    overflow: hidden;

    &::after {
        content: url("../icons/loading.svg");
        position: absolute;
        top: 50%;
        left: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        line-height: 0;
        transform: translateX(-50%) translateY(-50%);
        animation: load 0.5s linear infinite;
        z-index: 2;
    }

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        background-color: rgba(0, 0, 0, 0.1);
    }
}

@keyframes load {
    from {
        transform: translateX(-50%) translateY(-50%) rotate(0);
    }

    to {
        transform: translateX(-50%) translateY(-50%) rotate(360deg);
    }
}

.wp-block[data-type^="tergos"],
.wp-block[data-type^="components"],
.wp-block[data-type^="blocks"] {
    margin: 0;
    height: 100%;

    & > * {
        min-height: 100px;
        height: 100%;

        @include hover {
            outline: 1px dashed var(--color-black);
            outline-offset: -2px;
        }
    }
}

.wp-block {
    max-width: none !important;
}

.is-root-container {
    max-width: 1440px !important;
    margin-inline: auto !important;
    background-color: var(--color-white-alt);
}

.acf-innerblocks-container {
    display: contents;
}
